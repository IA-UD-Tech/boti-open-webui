name: Deploy DEV EC2 (auto)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Create and publish Docker images with specific build args"]
    types:
      - completed
    branches:
      - dev

permissions:
  contents: read
  packages: read

env:
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  WEBUI_SECRET_KEY_DEV: ${{ secrets.WEBUI_SECRET_KEY_DEV }}
  PIPELINES_API_KEY_DEV: ${{ secrets.PIPELINES_API_KEY_DEV }}


jobs:
  deploy:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Deploy to EC2 Dev
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: dev.boti.deusto.es
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY_DEV }}
          envs: GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, OPENAI_API_KEY, WEBUI_SECRET_KEY_DEV, PIPELINES_API_KEY_DEV
          script: |
            cd /home/ubuntu/app

            echo "üì• Descargando docker-compose.dev.yml desde GitHub..."
            curl -L https://raw.githubusercontent.com/iaud-tech/boti-open-webui/refs/heads/dev/docker-compose.dev.yml -o docker-compose.dev.yml
            
            echo "üîß Generando archivo .env..."
            cat <<EOF > ~/.env
            ENV=dev
            WEBUI_NAME=DEV-Boti
            DEFAULT_LOCALE=es
            OPENAI_API_KEY=${OPENAI_API_KEY}
            WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY_DEV}
            ENABLE_LOGIN_FORM=false
            ENABLE_OAUTH_SIGNUP=true
            GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
            WEBUI_URL=https://dev.boti.deusto.es
            PIPELINES_API_KEY=${PIPELINES_API_KEY_DEV}
            OPEN_WEBUI_PORT=3000
            EOF

            echo "üîå Verificando red 'caddy-net'..."
            docker network inspect caddy-net >/dev/null 2>&1 || docker network create caddy-net

            echo "‚¨áÔ∏è Actualizando im√°genes de Docker Compose..."
            docker compose -f docker-compose.dev.yml pull

            echo "üßπ Deteniendo contenedores anteriores..."
            docker compose -f docker-compose.dev.yml down

            echo "üöÄ Iniciando contenedores con las √∫ltimas im√°genes..."
            docker compose -f docker-compose.dev.yml up -d

            echo "üßº Limpiando im√°genes no utilizadas..."
            docker image prune -f
            
            echo "üóëÔ∏è Eliminando archivo .env con secretos..."
            rm ~/.env

            
